enum TransactionType {
  TRANSFER
  MINT
  BURN
}

type TokenHolderTransaction @entity(immutable: true) {
  id: ID! # <tokenholder ID>-transaction-logIndex
  balance: BigDecimal!
  block: BigInt!
  date: String! # ISO 8601 format
  type: TransactionType!
  holder: TokenHolder!
  previousBalance: BigDecimal!
  timestamp: String! # Unix format
  transaction: Bytes!
  transactionLogIndex: BigInt!
  value: BigDecimal!
}

type TokenHolderBalance @entity {
  # One per day
  id: ID! # <tokenholder ID>-<YYYY-MM-DD>
  date: String! # YYYY-MM-DD
  holder: TokenHolder!
  balance: BigDecimal!
}

type TokenHolder @entity {
  id: ID! # <token ID>-holder
  balance: BigDecimal!
  holder: Bytes!
  token: Token!
  balances: [TokenHolderBalance!]! @derivedFrom(field: "holder")
}

type TokenDailySnapshot @entity {
  id: ID! # <token ID>/<YYYY-MM-DD>
  date: String! # YYYY-MM-DD
  token: Token!
  balancesList: [String!]! # TokenHolderBalance IDs
}

type Token @entity {
  id: ID! # token-blockchain
  address: Bytes!
  blockchain: String!
  name: String!
  dailySnapshots: [TokenDailySnapshot!]! @derivedFrom(field: "token")
}
